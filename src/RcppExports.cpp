// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Calcb
NumericVector Calcb(double beta, NumericVector tm, LogicalVector event, NumericMatrix ps);
RcppExport SEXP CoxBinChange_Calcb(SEXP betaSEXP, SEXP tmSEXP, SEXP eventSEXP, SEXP psSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tm(tmSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type event(eventSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ps(psSEXP);
    __result = Rcpp::wrap(Calcb(beta, tm, event, ps));
    return __result;
END_RCPP
}
// CalcbQ
arma::mat CalcbQ(arma::vec theta, arma::vec tm, arma::vec event, arma::mat ps, arma::mat Q);
RcppExport SEXP CoxBinChange_CalcbQ(SEXP thetaSEXP, SEXP tmSEXP, SEXP eventSEXP, SEXP psSEXP, SEXP QSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tm(tmSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type event(eventSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ps(psSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    __result = Rcpp::wrap(CalcbQ(theta, tm, event, ps, Q));
    return __result;
END_RCPP
}
// CalcNablabeetaUbeta
double CalcNablabeetaUbeta(arma::vec theta, arma::vec tm, arma::vec event, arma::mat ps, arma::mat Q, arma::mat psDeriv);
RcppExport SEXP CoxBinChange_CalcNablabeetaUbeta(SEXP thetaSEXP, SEXP tmSEXP, SEXP eventSEXP, SEXP psSEXP, SEXP QSEXP, SEXP psDerivSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tm(tmSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type event(eventSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ps(psSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type psDeriv(psDerivSEXP);
    __result = Rcpp::wrap(CalcNablabeetaUbeta(theta, tm, event, ps, Q, psDeriv));
    return __result;
END_RCPP
}
// CalcNablabeetaUgamma
arma::mat CalcNablabeetaUgamma(arma::vec theta, arma::vec tm, arma::vec event, arma::mat ps, arma::mat Q, arma::mat psDeriv);
RcppExport SEXP CoxBinChange_CalcNablabeetaUgamma(SEXP thetaSEXP, SEXP tmSEXP, SEXP eventSEXP, SEXP psSEXP, SEXP QSEXP, SEXP psDerivSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tm(tmSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type event(eventSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ps(psSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type psDeriv(psDerivSEXP);
    __result = Rcpp::wrap(CalcNablabeetaUgamma(theta, tm, event, ps, Q, psDeriv));
    return __result;
END_RCPP
}
// CalcSurvFromNPMLE
NumericVector CalcSurvFromNPMLE(NumericVector probs, NumericVector points, NumericMatrix Tbull);
RcppExport SEXP CoxBinChange_CalcSurvFromNPMLE(SEXP probsSEXP, SEXP pointsSEXP, SEXP TbullSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type probs(probsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type points(pointsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Tbull(TbullSEXP);
    __result = Rcpp::wrap(CalcSurvFromNPMLE(probs, points, Tbull));
    return __result;
END_RCPP
}
// CalcUbetabeeta
double CalcUbetabeeta(double beta, NumericVector tm, LogicalVector event, NumericMatrix ps, NumericMatrix psDeriv);
RcppExport SEXP CoxBinChange_CalcUbetabeeta(SEXP betaSEXP, SEXP tmSEXP, SEXP eventSEXP, SEXP psSEXP, SEXP psDerivSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tm(tmSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type event(eventSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ps(psSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type psDeriv(psDerivSEXP);
    __result = Rcpp::wrap(CalcUbetabeeta(beta, tm, event, ps, psDeriv));
    return __result;
END_RCPP
}
// CalcUbetabeetaRS
NumericVector CalcUbetabeetaRS(double beta, NumericVector tm, LogicalVector event, NumericMatrix ps, NumericMatrix psDeriv);
RcppExport SEXP CoxBinChange_CalcUbetabeetaRS(SEXP betaSEXP, SEXP tmSEXP, SEXP eventSEXP, SEXP psSEXP, SEXP psDerivSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tm(tmSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type event(eventSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ps(psSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type psDeriv(psDerivSEXP);
    __result = Rcpp::wrap(CalcUbetabeetaRS(beta, tm, event, ps, psDeriv));
    return __result;
END_RCPP
}
// CoxLogLik
double CoxLogLik(arma::vec betagamma, arma::vec tm, arma::vec event, arma::mat ps, arma::mat Q);
RcppExport SEXP CoxBinChange_CoxLogLik(SEXP betagammaSEXP, SEXP tmSEXP, SEXP eventSEXP, SEXP psSEXP, SEXP QSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type betagamma(betagammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tm(tmSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type event(eventSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ps(psSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    __result = Rcpp::wrap(CoxLogLik(betagamma, tm, event, ps, Q));
    return __result;
END_RCPP
}
// CoxLogLikGrad
arma::vec CoxLogLikGrad(arma::vec theta, arma::vec tm, arma::vec event, arma::mat ps, arma::mat Q);
RcppExport SEXP CoxBinChange_CoxLogLikGrad(SEXP thetaSEXP, SEXP tmSEXP, SEXP eventSEXP, SEXP psSEXP, SEXP QSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tm(tmSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type event(eventSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ps(psSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    __result = Rcpp::wrap(CoxLogLikGrad(theta, tm, event, ps, Q));
    return __result;
END_RCPP
}
// CoxLogLikHess
arma::mat CoxLogLikHess(arma::vec betagamma, arma::vec tm, arma::vec event, arma::mat ps, arma::mat Q);
RcppExport SEXP CoxBinChange_CoxLogLikHess(SEXP betagammaSEXP, SEXP tmSEXP, SEXP eventSEXP, SEXP psSEXP, SEXP QSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type betagamma(betagammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tm(tmSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type event(eventSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ps(psSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    __result = Rcpp::wrap(CoxLogLikHess(betagamma, tm, event, ps, Q));
    return __result;
END_RCPP
}
// FindIntervalCalibCPP
NumericMatrix FindIntervalCalibCPP(NumericMatrix w, NumericMatrix wres);
RcppExport SEXP CoxBinChange_FindIntervalCalibCPP(SEXP wSEXP, SEXP wresSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type w(wSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type wres(wresSEXP);
    __result = Rcpp::wrap(FindIntervalCalibCPP(w, wres));
    return __result;
END_RCPP
}
// FindIntervalCPP
IntegerVector FindIntervalCPP(double point, NumericMatrix w);
RcppExport SEXP CoxBinChange_FindIntervalCPP(SEXP pointSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type point(pointSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type w(wSEXP);
    __result = Rcpp::wrap(FindIntervalCPP(point, w));
    return __result;
END_RCPP
}
// myF
double myF(double beta, NumericVector tm, LogicalVector event, NumericMatrix ps);
RcppExport SEXP CoxBinChange_myF(SEXP betaSEXP, SEXP tmSEXP, SEXP eventSEXP, SEXP psSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tm(tmSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type event(eventSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ps(psSEXP);
    __result = Rcpp::wrap(myF(beta, tm, event, ps));
    return __result;
END_RCPP
}
// myFmyHess
double myFmyHess(double beta, NumericVector tm, LogicalVector event, NumericMatrix ps);
RcppExport SEXP CoxBinChange_myFmyHess(SEXP betaSEXP, SEXP tmSEXP, SEXP eventSEXP, SEXP psSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tm(tmSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type event(eventSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ps(psSEXP);
    __result = Rcpp::wrap(myFmyHess(beta, tm, event, ps));
    return __result;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP CoxBinChange_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    __result = Rcpp::wrap(rcpp_hello_world());
    return __result;
END_RCPP
}
